Given the following function prototype, write 3 very simple C functions (compilation units) that can be optimized at compile-time using the optimization technique specified.

The function prototype is designed to allow for inputs and outputs of multiple types. The function outputs are returned using the final three parameters. You do not need to use all of the input parameters nor all of the output parameters.

For each function, explain the optimization that could be performed. The optimizations should not depend on the functions being called with constant input values.When using functions from the standard library, rather than including header files, forward declare the standard library function.

The ability for the compiler to optimize the generated code should not depend on the function being called with any particular inputs, but the outputs must depend in some way on the function inputs. In particular, all optimizations should be possible within the context of the code that you generate.

The examples should vary in structure, particularly how and where the optimization technique can be applied. Do not include any comments in the code.

Function prototype:
```void customFunction(int int1, int int2, 
					double double1, double double2, 
					const char *str1, const char *str2, 
					int *outInt, double *outDouble, char **outString);```

Optimization technique: code folding

---

Output three more examples where the optimization opportunity is less obvious. Remember, the optimizations should not depend on the functions being called with constant input values.

---

Output four more examples where the optimization opportunity is less obvious. The opportunity should be spread across multiple statements in the function. Remember, the optimizations should not depend on the functions being called with constant input values.

---

Output all of the functions in a zip file with the following structure. "technique.txt" should contain only the exact optimization technique listed above. The folders should be named 11 through 20.

1/compilation_unit.c
1/technique.txt
2/compilation_unit.c
2/technique.txt
…





--

Write each of the generated code snippets to a separate file. Alongside each code snippet, write a text file with the optimization explanation. Provide them all to me in a zip file.

—